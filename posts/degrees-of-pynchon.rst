.. title: Degrees of Pynchon
.. slug: degrees-of-pynchon
.. date: 2015-03-16 02:12:30 UTC
.. tags: javascript, d3
.. link: 
.. description: 
.. type: text

We spent two days last week working on solo projects at Hack Reactor. I decided to build a visualization of literary influences, beginning with `Thomas Pynchon <http://thomaspynchon.com/>`_ -- who, aside from being totally amazing, a genius, and one of my personal role models, also has a `lengthy section on Wikipedia <https://en.wikipedia.org/wiki/Thomas_Pynchon#Influence>`_ full of writers who influenced him and writers he's influenced.

Thomas Pynchon's circle of influence
====================================

To visualize the relationships between Pynchon and the writers who are connected to him, I created an arc diagram  in `D3 <http://www.d3js.org>`_. A `chord diagram <https://github.com/mbostock/d3/wiki/Chord-Layout>`_ would have been simpler, as D3 provides a built-in layout generator for these, but I fell in love with arc diagrams after seeing so many beautiful examples online (e.g., `Bible Cross-References <http://www.chrisharrison.net/index.php/Visualizations/BibleViz>`_, `Command Usage Arc Diagrams <http://www.autodeskresearch.com/pages/infovis/command_usage_arc>`_, `The Shape of Song <http://www.turbulence.org/Works/song/gallery/gallery.html>`_).

I went down a few rabbit holes, including creating a matrix out of the data similar to those required by the chord diagram and plotting the writers as nodes on a scale. Thankfully, there's this wonderful `Les Mis√©rables character co-ocurrences arc diagram <http://bl.ocks.org/sjengle/5431779>`_, also in D3, which I used as a model for my graph.

I formatted the influence data into an object with two arrays, **nodes** and **links**. Each node contains the name of a writer and a number indicating the writer's category (influencer or influencee), and each link contains the connection between each writer and Thomas Pynchon.

.. figure:: /images/degrees-of-pynchon.png
   :alt: Thomas Pynchon's literary influences
   :target: http://sahiga.github.io/degrees-of-pynchon

   Click for the interactive version. I stole the quote from the Simpsons episode in which Thomas Pynchon reviews Marge's book. He does not love cameras.

All the influencers appear to the left of Pynchon, with an arc above the horizontal; all the influencees appear to the right, with an arc below the horizontal. The colors were generated by D3's `category20b scale <https://github.com/mbostock/d3/wiki/Ordinal-Scales#category20b>`_. For the arcs, I used pure SVG paths instead of D3's built-in arc function.

Other circles of influence
==========================

I also wanted to visualize the influences of the other writers. Initially, I added all their connections to Pynchon's graph. This worked for Vladimir Nabokov but failed for Emily Dickinson, who was influenced by a writer who appeared to the right of her (Ralph Waldo Emerson) -- resulting in a backwards connection.

The solution was to create new graphs and layer them on top of Pynchon's. So, clicking on Nabokov's name (for instance) will fade out Pynchon's graph, increase the size of Nabokov's name, move his name and dot to the center of the page, and display his influence graph around that new center. Mousing away from Nabokov's graph will delete his graph and bring back Pynchon's graph.

.. figure:: /images/degrees-of-pynchon-new-graph.png
   :alt: Vladimir Nabokov's literary influences

   Vladimir Nabokov's literary influences

Figuring out how to rearrange the new graph around the new center dot was probably the most difficult part of the entire project. I passed the center position to the new graph and gave the influencer dots a negative x-axis position so that they appeared to the left of the center dot.

Hover selections
================

The last feature I added was a hover selector. Mousing over a writer's name will fade out the entire diagram except for parts belonging to that writer (name, dot, arc).

.. figure:: /images/degrees-of-pynchon-hover.png
   :alt: Hovering over William S. Burroughs

   Hovering over William S. Burroughs

This was the second most difficult part of the project, because (1) the entire graph fades out upon clicking a name and (2) the entire graph fades back in when the mouse leaves the new graph.

I ended up initializing a boolean to keep everything in check: ``multipleGraphsOnPage`` starts off as false, becomes true when a new graph is created, and reverts to false when the new graph is deleted. The hover selector is enabled only when ``multipleGraphsOnPage`` is false.

My project completion strategy
==============================

The purpose of the solo project is not to build a perfect product, but a minimum viable product. Hack Reactor instructed us to reduce the size of our scope in half, twice. I finished my project before the deadline, but I also deliberately chose a very small scope. The extra time afforded me the chance to polish the look and feel of my project, including the animations. I'm acutely aware of my limitations as a developer. Many of my classmates built actual apps, with actual stacks, but I knew I would struggle if I tasked myself with hooking up a front end to a backend. So I decided to improve my data visualization skills and dive deep into D3 -- and I absolutely loved it.

More fun D3 resources
=====================

* `D3 and JavaScript: Working with JSON <https://www.dashingd3js.com/d3-examples/1-d3-and-javascript-working-with-json>`_
* `How to rotate the text labels for the x-axis of a D3.js graph <http://www.d3noob.org/2013/01/how-to-rotate-text-labels-for-x-axis-of.html>`_
* `SVG Text Element <https://www.dashingd3js.com/svg-text-element>`_
* `SVG Path Element <http://tutorials.jenkov.com/svg/path-element.html#arcs>`_